<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <UserSecretsId>29a3edd0-2a91-40d2-ad4d-dcb46d5ca9ed</UserSecretsId>
    <ServerGarbageCollection>true</ServerGarbageCollection>
    <IsPackable>false</IsPackable>
    <SpaRoot>ReactClient\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
  </PropertyGroup>


  <PropertyGroup Condition=" '$(RunConfiguration)' == 'Default' ">
    <StartAction>Project</StartAction>
    <LaunchUrl>/</LaunchUrl>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <CustomCommands>
      <CustomCommands>
        <Command>
          <type>AfterBuild</type>
          <command>../copyNugets.sh</command>
          <workingdir>${SolutionDir}</workingdir>
        </Command>
      </CustomCommands>
    </CustomCommands>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.1.15" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.1-beta1" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="3.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.WebSockets" Version="2.2.0-preview3-35497" />
    <PackageReference Include="PropertyChanged.Fody" Version="2.5.14" />
    <PackageReference Include="GraphQL" Version="2.4.0" />
    <PackageReference Include="GraphQL.Server.Ui.Playground" Version="3.2.0" />
    <PackageReference Include="GraphQL.Server.Transports.AspNetCore" Version="3.2.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.0" />
  </ItemGroup>

  
  <ItemGroup>
    <Content Update="appsettings.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\TinyCMS.Data\TinyCMS.Data.csproj" />
    <ProjectReference Include="..\TinyCMS.FileStorage\TinyCMS.FileStorage.csproj" />
    <ProjectReference Include="..\TinyCMS.Interfaces\TinyCMS.Interfaces.csproj" />
    <ProjectReference Include="..\TinyCMS.NodeSerializer\TinyCMS.NodeSerializer.csproj" />
    <ProjectReference Include="..\TinyCMS.SocketServer\TinyCMS.SocketServer.csproj" />
    <ProjectReference Include="..\TinyCMS.Node.ResizeImage\TinyCMS.Node.ResizeImage.csproj" />
    <ProjectReference Include="..\TinyCMS.Commerce\TinyCMS.Commerce.csproj" />
    <ProjectReference Include="..\TinyCMS.Proxy\TinyCMS.Proxy.csproj" />
    <ProjectReference Include="..\TinyCMS.Base\TinyCMS.Base.csproj" />
    <ProjectReference Include="..\TinyCMS.GraphQL\TinyCMS.GraphQL.csproj" />
    <ProjectReference Include="..\CoNodes\CoNodes.csproj" />
    <ProjectReference Include="..\MWNodes\MWNodes.csproj" />
  </ItemGroup>
  <ItemGroup>
    <None Remove="CMSData.dat" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Properties\PublishProfiles\" />
    <Folder Include="Models\" />
    <Folder Include="Helpers\" />
    <Folder Include="Nodes\" />
    <Folder Include="files\" />
    <Folder Include="files\New Folder\" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="Controllers\RestController.cs" />
    <Compile Remove="GraphQL\NodeDependencyResolver.cs" />
    <Compile Remove="GraphQL\NodeQuery.cs" />
    <Compile Remove="GraphQL\NodeSchema.cs" />
    <Compile Remove="GraphQL\NodeType.cs" />
    <Compile Remove="GraphQL\NodeResolver.cs" />
    <Compile Remove="GraphQL\NodeGraphType.cs" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Microsoft.Extensions.DependencyInjection.Abstractions, Version=2.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60" />
  </ItemGroup>
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles-&gt;'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>
